@page "/Home"
@using System.Diagnostics
@using TeslaSolarCharger.Client.Components.StartPage
@using TeslaSolarCharger.Client.Services.Contracts
@using TeslaSolarCharger.Shared.Dtos.Home

@inject IEnergyDataService EnergyDataService
@inject IHomeService HomeService

<PageTitle>Solar 4 Car</PageTitle>

<MerryChristmasAndHappyNewYearComponent></MerryChristmasAndHappyNewYearComponent>

<BackendInformationDisplayComponent></BackendInformationDisplayComponent>
<LoggedErrorsComponent></LoggedErrorsComponent>

<PowerFlowComponent></PowerFlowComponent>
<PowerBufferComponent></PowerBufferComponent>
@if (_showEnergyData)
{
    <EnergyPredictionComponent></EnergyPredictionComponent>
}

@if (_loadPoints == default)
{
    <PlaceholderComponent Count="6"></PlaceholderComponent>
}
else
{
    foreach (var loadPoint in _loadPoints)
    {
        <div class="shadow p-3 mb-5 bg-white rounded d-flex align-items-center">
            <div>
                @if (loadPoint.ChargingConnectorName != default && loadPoint.CarName != default)
                {
                    <MudIcon Icon="@Icons.Material.Filled.EvStation" Class="me-1" />
                    @loadPoint.ChargingConnectorName
                    <span class="mx-1">|</span>
                    <MudIcon Icon="@Icons.Material.Filled.DirectionsCar" Class="me-1" />
                    @loadPoint.CarName
                    <span class="mx-1">|</span>
                    <span>@($"{loadPoint.ChargingPower:N0} W")</span>
                }
                else if (loadPoint.ChargingConnectorName != default)
                {
                    <MudIcon Icon="@Icons.Material.Filled.EvStation" Class="me-1" />
                    @loadPoint.ChargingConnectorName
                    <span class="mx-1">|</span>
                    <span>@($"{loadPoint.ChargingPower:N0} W")</span>
                }
                else if (loadPoint.CarName != default)
                {
                    <MudIcon Icon="@Icons.Material.Filled.DirectionsCar" Class="me-1" />
                    @loadPoint.CarName
                    <span class="mx-1">|</span>
                    <span>@($"{loadPoint.ChargingPower:N0} W")</span>
                }
                else
                {
                    <span>@($"{loadPoint.ChargingPower:N0} W")</span>
                }
            </div>
        </div>
    }
}

@code {
    private bool _showEnergyData;
    private List<DtoLoadPointOverview>? _loadPoints;

    private int value = 0;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _showEnergyData = await EnergyDataService.ShowEnergyDataOnHome();
        await RefreshLoadPoints();
    }

    private async Task RefreshLoadPoints()
    {
        _loadPoints = await HomeService.GetPluggedInLoadPoints();
        if (Debugger.IsAttached && _loadPoints?.Count == 0)
        {
            _loadPoints.Add(new DtoLoadPointOverview()
            {
                CarId = 1,
                CarName = "CarName",
                ChargingConnectorId = 1,
                ChargingConnectorName = "ChargingConnectorName",
                ChargingCurrent = 10,
                ChargingPhaseCount = 3,
                ChargingPower = 3000,
                MaxCurrent = 16,
                MaxPhaseCount = 3,
            });
        }
    }
}
