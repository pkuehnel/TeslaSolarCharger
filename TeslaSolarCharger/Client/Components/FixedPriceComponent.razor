@using System.Globalization
@using TeslaSolarCharger.Shared.Dtos.ChargingCost.CostConfigurations
@using TeslaSolarCharger.Shared.Localization.Contracts
@using TeslaSolarCharger.Shared.Localization.Registries
@using TeslaSolarCharger.Shared.Localization.Registries.Components
@inject ITextLocalizationService TextLocalizer

@if (FixedPrice == null)
{
    <LoadingSpinnerComponent />
}
else
{
    <div class="row row-cols-auto">
        @foreach (var day in Enum.GetValues<DayOfWeek>())
        {
            <div class="col">
                <input type="checkbox" checked="@(FixedPrice.ValidOnDays != null && FixedPrice.ValidOnDays.Contains(day))" @onchange="() => CheckboxChanged(day)" />
                <label>@CultureInfo.CurrentCulture.DateTimeFormat.GetDayName(day)</label>
            </div>
        }
    </div>
    <div class="row align-items-center">
        <div class="col-auto">
            <InputComponent ValueId="fromHour"
                            LabelText='@T("From Hour")'
                            UnitText=""
                            HelpText="">
                <InputFragment>
                    <InputNumber id="fromHour" @bind-Value="FixedPrice.FromHour" class="form-control" placeholder=" " />
                </InputFragment>
            </InputComponent>
        </div>
        <div class="col-auto">
            :
        </div>
        <div class="col-auto">
            <InputComponent ValueId="fromMinute"
                            LabelText='@T("From Minute")'
                            UnitText=""
                            HelpText="">
                <InputFragment>
                    <InputNumber id="fromMinute" @bind-Value="FixedPrice.FromMinute" class="form-control" placeholder=" " />
                </InputFragment>
            </InputComponent>
        </div>
    </div>
    <div class="row align-items-center">
        <div class="col-auto">
            <InputComponent ValueId="toHour"
                            LabelText='@T("To Hour")'
                            UnitText=""
                            HelpText="">
                <InputFragment>
                    <InputNumber id="toHour" @bind-Value="FixedPrice.ToHour" class="form-control" placeholder=" " />
                </InputFragment>
            </InputComponent>
        </div>
        <div class="col-auto">
            :
        </div>
        <div class="col-auto">
            <InputComponent ValueId="toMinute"
                            LabelText='@T("To Minute")'
                            UnitText=""
                            HelpText="">
                <InputFragment>
                    <InputNumber id="toMinute" @bind-Value="FixedPrice.ToMinute" class="form-control" placeholder=" " />
                </InputFragment>
            </InputComponent>
        </div>
    </div>

}

@code {
    [Parameter]
    public FixedPrice? FixedPrice { get; set; }

    private string T(string key) =>
        TextLocalizer.Get<FixedPriceComponentLocalizationRegistry>(key, typeof(SharedComponentLocalizationRegistry))
        ?? key;

    private void CheckboxChanged(DayOfWeek day)
    {
        if (FixedPrice?.ValidOnDays == null)
        {
            return;
        }

        if (FixedPrice.ValidOnDays.Contains(day))
        {
            FixedPrice.ValidOnDays.Remove(day);
        }
        else
        {
            FixedPrice.ValidOnDays.Add(day);
        }
    }
}
