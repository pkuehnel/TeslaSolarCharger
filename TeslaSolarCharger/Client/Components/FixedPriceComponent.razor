@using TeslaSolarCharger.Shared.Dtos.ChargingCost.CostConfigurations

@if (FixedPrice == null)
{
    <div class="spinner"></div>
}
else
{
    <div class="row row-cols-auto">
        @foreach (var day in Enum.GetValues<DayOfWeek>())
        {
            <div class="col">
                <input type="checkbox" checked="@(FixedPrice.ValidOnDays != null && FixedPrice.ValidOnDays.Contains(day))" @onchange="() => CheckboxChanged(day)" />
                <label>@day.ToString()</label>
            </div>
        }
    </div>
    <div class="row align-items-center">
        <div class="col-auto">
            <GenericInput For="() => FixedPrice.FromHour" />
        </div>
        <div class="col-auto">
            :
        </div>
        <div class="col-auto">
            <GenericInput For="() => FixedPrice.FromMinute" />
        </div>
    </div>
    <div class="row align-items-center">
        <div class="col-auto">
            <GenericInput For="() => FixedPrice.ToHour" />
        </div>
        <div class="col-auto">
            :
        </div>
        <div class="col-auto">
            <GenericInput For="() => FixedPrice.ToMinute" />
        </div>
    </div>
    
}

@code {
    [Parameter]
    public FixedPrice? FixedPrice { get; set; }

    private void CheckboxChanged(DayOfWeek day)
    {
        if(FixedPrice?.ValidOnDays == null)
        {
            return;
        }
        
        if (FixedPrice.ValidOnDays.Contains(day))
        {
            FixedPrice.ValidOnDays.Remove(day);
        }
        else
        {
            FixedPrice.ValidOnDays.Add(day);
        }
    }
}
