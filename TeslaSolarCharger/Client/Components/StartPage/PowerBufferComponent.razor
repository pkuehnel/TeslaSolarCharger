@using TeslaSolarCharger.Shared.Dtos
@using TeslaSolarCharger.Shared.Localization.Contracts
@using TeslaSolarCharger.Shared.Localization.Registries
@using TeslaSolarCharger.Shared.Localization.Registries.Components.StartPage

@inject HttpClient HttpClient
@inject ISnackbar Snackbar
@inject ITextLocalizationService TextLocalizer


@if (_displayValue)
{
    <div style="max-width: 300px; margin: 0 auto;">
        <GenericInput T="int?"
                      For="() => PowerBuffer"
                      PostfixButtonStartIcon="@Icons.Material.Filled.Save"
                      OnButtonClicked="UpdatePowerBuffer"></GenericInput>
    </div>

}

@code {
    private string T(string key) =>
        TextLocalizer.Get<PowerBufferComponentLocalizationRegistry>(key, typeof(SharedComponentLocalizationRegistry))
        ?? key;

    private int? PowerBuffer { get; set; }
    private int? _lastSavedPowerBuffer;
    private bool _displayValue;

    protected override async Task OnInitializedAsync()
    {
        var result = await HttpClient.GetFromJsonAsync<DtoValue<bool>>("api/BaseConfiguration/AllowPowerBufferChangeOnHome").ConfigureAwait(false);
        if(result == default)
        {
            return;
        }
        _displayValue = result.Value;
        if(_displayValue)
        {
            var powerBufferResult = await HttpClient.GetFromJsonAsync<DtoValue<int>>("api/BaseConfiguration/PowerBuffer").ConfigureAwait(false);
            if (powerBufferResult != default)
            {
                _lastSavedPowerBuffer = powerBufferResult.Value;
                PowerBuffer = powerBufferResult.Value;
            }
        }
        
    }

    private async Task UpdatePowerBuffer()
    {
        var response = await HttpClient.GetAsync($"api/BaseConfiguration/UpdatePowerBuffer?powerBuffer={PowerBuffer ?? 0}").ConfigureAwait(false);
        if (response.IsSuccessStatusCode)
        {
            Snackbar.Add(T("Power Buffer updated"), Severity.Success);
            _lastSavedPowerBuffer = PowerBuffer;
        }
        else
        {
            Snackbar.Add(T("Failed to update Power Buffer"), Severity.Error);
        }

    }
}