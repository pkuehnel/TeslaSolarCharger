<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Base Configuration" xml:space="preserve">
    <value>Basiskonfiguration</value>
  </data>
  <data name="General:" xml:space="preserve">
    <value>Allgemein:</value>
  </data>
  <data name="TeslaMate:" xml:space="preserve">
    <value>TeslaMate:</value>
  </data>
  <data name="Home Geofence" xml:space="preserve">
    <value>Home-Geofence</value>
  </data>
  <data name="To update the location, click the save button on the bottom of the page" xml:space="preserve">
    <value>Um den Standort zu aktualisieren, klicken Sie auf die Schaltfläche Speichern am unteren Ende der Seite</value>
  </data>
  <data name="Click on the map to select your home geofence. Within that area TSC will regulate the charging power." xml:space="preserve">
    <value>Klicken Sie auf die Karte, um Ihren Home-Geofence auszuwählen. Innerhalb dieses Bereichs reguliert TSC die Ladeleistung.</value>
  </data>
  <data name="Telegram:" xml:space="preserve">
    <value>Telegram:</value>
  </data>
  <data name="How to set up Telegram" xml:space="preserve">
    <value>So richten Sie Telegram ein</value>
  </data>
  <data name="Note: The Telegram bot for now only sends messages if something is not working. E.g. The car does not respond to commands, solar power values can not be refreshed,..." xml:space="preserve">
    <value>Hinweis: Der Telegram-Bot sendet derzeit nur Nachrichten, wenn etwas nicht funktioniert. z. B. reagiert das Fahrzeug nicht auf Befehle, Solardaten können nicht aktualisiert werden, ...</value>
  </data>
  <data name="Send test message" xml:space="preserve">
    <value>Testnachricht senden</value>
  </data>
  <data name="You need to save the configuration before testing it." xml:space="preserve">
    <value>Sie müssen die Konfiguration speichern, bevor Sie sie testen.</value>
  </data>
  <data name="Advanced settings. Please only change values here if you know what you are doing." xml:space="preserve">
    <value>Erweiterte Einstellungen. Ändern Sie Werte hier nur, wenn Sie wissen, was Sie tun.</value>
  </data>
  <data name="Values blelow 25 seconds are not recommended and might cause performance issues." xml:space="preserve">
    <value>Werte unter 25 Sekunden werden nicht empfohlen und können Leistungsprobleme verursachen.</value>
  </data>
  <data name="Saved." xml:space="preserve">
    <value>Gespeichert.</value>
  </data>
  <data name="Could not get result" xml:space="preserve">
    <value>Ergebnis konnte nicht abgerufen werden</value>
  </data>
</root>
